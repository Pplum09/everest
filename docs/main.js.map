{"version":3,"sources":["./src/app/components/summary/summary.component.ts","./src/app/components/summary/summary.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/add-card-form/add-card-form.component.ts","./src/app/components/add-card-form/add-card-form.component.html","./src/app/app.module.ts","./src/app/components/cred-card-list/cred-card-list.component.ts","./src/app/components/cred-card-list/cred-card-list.component.html","./src/app/app-routing.module.ts","./src/app/services/finance.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport {CreditCard} from 'src/app/models/credit-card.model';\n\nexport interface PaydownRate {\n  name: string;\n  series: {\n    name: string;\n    value: number;\n  }[];\n}\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss'],\n})\nexport class SummaryComponent implements OnInit, OnChanges {\n\n  @Input() creditCards: CreditCard[];\n  @Input() paydownRate: number;\n\n  private months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  public totalBalance = 0;\n  public totalPayoff: PaydownRate[] = [];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Month';\n  showYAxisLabel = true;\n  yAxisLabel = 'Balance';\n  autoScale = false;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.totalBalance = 0;\n    //this.paydownRate = 2000;\n    if (changes.hasOwnProperty('creditCards')) {\n      for (const card of changes.creditCards.currentValue) {\n        this.totalBalance += card.balance;\n      }\n      this.computePayoff();\n    }\n  }\n\n  public computePayoff(): void {\n    let balance = this.totalBalance\n    let paydownRate = this.paydownRate\n    const series = [];\n    const today = new Date();\n    let currentMonth = today.getMonth();\n    let year = today.getFullYear();\n    do {\n      series.push({\n        name: `${this.months[currentMonth]} '${year - 2000}`,\n        value: Math.trunc(balance),\n      });\n      balance = balance - paydownRate;\n      currentMonth += currentMonth >= this.months.length - 1 ? -currentMonth : 1;\n      if (currentMonth === 0) {\n        year++;\n      }\n    } while (balance > 0);\n\n    const result = [{name: 'Citi Bank', series}];\n    this.totalPayoff = result;\n  }\n  public computeInterest() {\n\n  }\n}\n","<div class=\"container\">\n  <button (click)=\"computeInterest()\">Compute Interest</button>\n  <input (keyup)=\"computePayoff()\" [(ngModel)]=\"paydownRate\" />\n  <input (keyup)=\"computePayoff()\" [(ngModel)]=\"totalBalance\" />\n  <ngx-charts-line-chart\n    [results]=\"totalPayoff\"\n    [gradient]=\"gradient\"\n    [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\"\n    [legend]=\"showLegend\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [xAxisLabel]=\"xAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    [autoScale]=\"autoScale\"\n    scheme=\"vivid\"\n  >\n  </ngx-charts-line-chart>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { CreditCard } from 'src/app/models/credit-card.model';\nimport { FinanceService } from 'src/app/services/finance.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n\n  public creditCards: CreditCard[] = [\n    {\n      name: 'Citi',\n      balance: 1300.21,\n      interest: 23.16,\n    },\n    {\n      name: 'Discover',\n      balance: 4320.83,\n      interest: 23.16,\n    },\n    {\n      name: 'Bank of America',\n      balance: 3402.97,\n      interest: 23.16,\n    },\n  ];\n\n  public monthlyPayment = 500;\n  public data = [];\n\n  constructor(\n    public financeService: FinanceService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public calculate(): void {\n    this.data = this.financeService.computeInterest(this.creditCards, this.monthlyPayment);\n  }\n}\n","<div class=\"container\">\n  <div class=\"configuration\">\n    <mat-accordion class=\"add-card\">\n      <div class=\"calculations\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Expected Monthly Payment</mat-label>\n          <input [(ngModel)]=\"monthlyPayment\" matInput autocomplete=\"off\" />\n        </mat-form-field>\n        <button (click)=\"calculate()\" mat-raised-button color=\"primary\">\n          Calculate\n        </button>\n      </div>\n      <br />\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title> Add Card </mat-panel-title>\n        </mat-expansion-panel-header>\n        <app-add-card-form [(creditCards)]=\"creditCards\"></app-add-card-form>\n      </mat-expansion-panel>\n    </mat-accordion>\n    <app-cred-card-list\n      [(creditCards)]=\"creditCards\"\n      class=\"cc-list\"\n    ></app-cred-card-list>\n  </div>\n  <div class=\"chart\">\n    <ngx-charts-line-chart\n      [results]=\"data\"\n      [gradient]=\"false\"\n      [xAxis]=\"true\"\n      [yAxis]=\"true\"\n      [legend]=\"true\"\n      [showXAxisLabel]=\"true\"\n      [showYAxisLabel]=\"true\"\n      xAxisLabel=\"Month\"\n      yAxisLabel=\"Balance\"\n      [autoScale]=\"true\"\n      scheme=\"vivid\"\n    ></ngx-charts-line-chart>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'everest';\n}\n","<app-home></app-home>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {CreditCard} from 'src/app/models/credit-card.model';\nimport {FormGroup, Validators, FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-add-card-form',\n  templateUrl: './add-card-form.component.html',\n  styleUrls: ['./add-card-form.component.scss'],\n})\nexport class AddCardFormComponent implements OnInit {\n\n  @Input() creditCards: CreditCard[];\n  @Output() creditCardsChange: EventEmitter<CreditCard[]> = new EventEmitter();\n\n  public creditCardForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    balance: new FormControl('', Validators.required),\n    interest: new FormControl('', Validators.required),\n  });\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public addCard(): void {\n    if (this.creditCardForm.valid) {\n      this.creditCards.push({\n        name: this.creditCardForm.value.name,\n        balance: parseInt(this.creditCardForm.value.balance),\n        interest: parseInt(this.creditCardForm.value.interest),\n      });\n\n      this.creditCardForm.reset();\n      this.creditCardsChange.emit([...this.creditCards]);\n    }\n  }\n}\n","<form [formGroup]=\"creditCardForm\" (ngSubmit)=\"addCard()\" class=\"container\">\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input\n      formControlName=\"name\"\n      matInput\n      autocomplete=\"off\"\n      placeholder=\"Name\"\n    />\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Balance</mat-label>\n    <span matPrefix><mat-icon>attach_money</mat-icon></span>\n    <input\n      formControlName=\"balance\"\n      matInput\n      autocomplete=\"off\"\n      placeholder=\"2303.83\"\n    />\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Interest</mat-label>\n    <input\n      formControlName=\"interest\"\n      matInput\n      autocomplete=\"off\"\n      placeholder=\"23.45\"\n    />\n    <mat-icon [inline]=\"true\" matSuffix>%</mat-icon>\n  </mat-form-field>\n  <button mat-raised-button color=\"accent\">\n    <mat-icon>add</mat-icon>Add Card\n  </button>\n  <br />\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './components/home/home.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CredCardListComponent } from './components/cred-card-list/cred-card-list.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddCardFormComponent } from './components/add-card-form/add-card-form.component';\nimport { SummaryComponent } from './components/summary/summary.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CredCardListComponent,\n    AddCardFormComponent,\n    SummaryComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    NgxChartsModule,\n    MatSliderModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { CreditCard } from '../../models/credit-card.model';\n\n@Component({\n  selector: 'app-cred-card-list',\n  templateUrl: './cred-card-list.component.html',\n  styleUrls: ['./cred-card-list.component.scss'],\n})\nexport class CredCardListComponent implements OnInit {\n\n  @Input() creditCards: CreditCard[];\n  @Output() creditCardsChange: EventEmitter<CreditCard[]> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public remove(index: number): void {\n    this.creditCards.splice(index, 1);\n    this.creditCardsChange.emit([...this.creditCards]);\n  }\n}\n","<mat-list>\n  <div mat-subheader>Credit Cards</div>\n  <mat-list-item\n    *ngFor=\"let creditCard of creditCards; last as last; let i = index\"\n  >\n    <mat-icon mat-list-icon>credit_card</mat-icon>\n    <div mat-line>{{ creditCard.name }}</div>\n    <div mat-line>${{ creditCard.balance }} - {{ creditCard.interest }}%</div>\n    <button (click)=\"remove(i)\" mat-icon-button>\n      <mat-icon>clear</mat-icon>\n    </button>\n    <mat-divider *ngIf=\"!last\"></mat-divider>\n  </mat-list-item>\n</mat-list>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\nexport interface CreditCard {\n  name: string;\n  balance: number;\n  interest: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FinanceService {\n\n  private months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  constructor() { }\n\n  private computeTotalBalance(cards: CreditCard[]): number {\n    let totalBalance = 0;\n    for (const card of cards) {\n      totalBalance += card.balance;\n    }\n\n    return totalBalance;\n  }\n\n  private getInterest(balance: number, dailyInterest: number): number {\n    return (30 * balance * dailyInterest) + balance\n  }\n\n  private shallowCopy(card: CreditCard): CreditCard {\n    return {\n      name: card.name,\n      balance: card.balance,\n      interest: card.interest,\n    }\n  }\n\n  public computeInterest(creditCards: CreditCard[], monthlyPayment: number) {\n\n    let currentCardIndex = 0;\n    let results = [];\n    const today = new Date();\n    let year = today.getFullYear();\n    const startYear = year;\n    let currentMonth = today.getMonth();\n    const ccCopy = [];\n\n    let totalBalance = this.computeTotalBalance(creditCards);\n    const cardMap = {Total: [{\n      name: `${this.months[currentMonth]} '${year - 2000}`,\n      value: Math.trunc(totalBalance),\n    }]};\n    for (const card of creditCards) {\n      let fuck = this.shallowCopy(card)\n      ccCopy.push(fuck);\n      cardMap[card.name] = [{\n        name: `${this.months[currentMonth]} '${year - 2000}`,\n        value: Math.trunc(card.balance),\n      }];\n    }\n    currentMonth += currentMonth >= this.months.length - 1 ? -currentMonth : 1;\n    if (currentMonth === 0) {\n      year++;\n    }\n    do {\n\n      // pay down current card\n      ccCopy[currentCardIndex].balance -= monthlyPayment;\n      if (ccCopy[currentCardIndex].balance < 0) {\n        ccCopy[currentCardIndex].balance = 0;\n      }\n      totalBalance = 0\n      for (let i = 0; i < ccCopy.length; i++) {\n\n        // apply interest to all cards\n        const dailyInterest = ccCopy[i].interest / 100 / 365;\n        ccCopy[i].balance = this.getInterest(\n          ccCopy[i].balance,\n          dailyInterest\n        );\n\n        // calculate total balance\n        totalBalance += ccCopy[i].balance;\n\n        // apply balance to appropriate card series\n        cardMap[ccCopy[i].name].push({\n          name: `${this.months[currentMonth]} '${year - 2000}`,\n          value: Math.trunc(ccCopy[i].balance),\n        });\n\n      }\n\n      // add total balance to series\n      cardMap['Total'].push({\n        name: `${this.months[currentMonth]} '${year - 2000}`,\n        value: Math.trunc(totalBalance),\n      });\n\n      // increment current card if balance is 0\n      currentMonth += currentMonth >= this.months.length - 1 ? -currentMonth : 1;\n      if (currentMonth === 0) {\n        year++;\n      }\n\n      if (ccCopy[currentCardIndex].balance <= 0) {\n        currentCardIndex++;\n      }\n\n    } while (totalBalance > 0 && year < startYear + 40 && currentCardIndex < ccCopy.length);\n\n\n\n    // apply to graph\n    for (var key of Object.keys(cardMap)) {\n      results.push({name: key, series: cardMap[key]});\n    }\n\n    return results;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}